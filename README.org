* org-epubinfo
Org-EpubInfo integrates [[https://github.com/akirak/epubinfo][epubinfo]] program with Emacs Org mode.
At present, it provides a dynamic block for inserting the table of contents
of an EPUB file.
** Installation
This package is not available on MELPA yet.
Install =epubinfo= program and this package.
** Usage
=epub-toc= dynamic block inserts the table of contents of an EPUB file.
See the following example:

#+begin_src org
  ,#+BEGIN: epub-toc :context self :depth 1 :checkbox t
  ,#+END:
#+end_src

The first =file:= link of the Org entry should point to an EPUB file.
Optionally, you can change it to the parent entry by setting =:context= to =parent=.

When you hit =C-c C-c= on this block, an Org list is inserted into the block.
The maximum depth is 1 in this example, so only the chapters are populated.
Since =:checkbox= is set to t, each item has a checkbox.

The output will be as follows:

#+begin_src org
  ,#+BEGIN: epub-toc :context self :depth 1 :checkbox t
  - [ ] Introduction
  - [ ] Infrastructure as Code (IaC)
  - [ ] Creating And Managing Google Kubernetes Engine (GKE) Clusters With Terraform
  - [ ] Creating And Managing AWS Elastic Kubernetes Service (EKS) Clusters With Terraform
  - [ ] Creating And Managing Azure Kubernetes Service (AKS) Clusters With Terraform
  - [ ] There Is More About Infrastructure as Code (IaC)
  - [ ] Packaging, Deploying, And Managing Applications
  - [ ] Using Helm As A Package Manager For Kubernetes
  - [ ] There Is More About Packaging, Deploying, And Managing Applications
  - [ ] Setting Up A Local Development Environment
  - [ ] Exploring Serverless Computing
  - [ ] Using Managed Functions As A Service (FaaS)
  - [ ] Using Managed Containers As A Service (CaaS)
  - [ ] Using Self-Managed Containers As A Service (CaaS)
  - [ ] There Is More About Serverless
  - [ ] Using Centralized Logging
  - [ ] Deploying Applications Using GitOps Principles
  - [ ] Applying GitOps Principles Using Argo CD
  - [ ] There Is More About GitOps
  - [ ] Applying Progressive Delivery
  - [ ] Using Argo Rollouts To Deploy Applications
  - [ ] This Is NOT The End
  ,#+END:
#+end_src

The block supports the following options:

- =:context= :: Org entry which should contain a file link to the EPUB file. =self= and =parent= are supported, and the default is =self=. Note that the first =file:= link in the entry should point to the EPUB file.
- =:depth= :: Depth of entries to include in the output. The default is nil, which means all entries are included.
- =:checkbox= :: Whether to add a checkbox to each item. The default is nil.
** License
GPL v3
